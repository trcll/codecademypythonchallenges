#Double Index
#The function should double the value of the element at index of lst and return the new list with the doubled value.
#If index is not a valid index, the function should return the original list.
def double_index(lst, index):
  if index < len(lst):
  	lst[index] = lst[index] * 2
  return lst
print(double_index([3, 8, -10, 12], 2))

#Remove Middle
#The function should return a list where all elements in lst with an index between start and end (inclusive) have been removed.
def remove_middle(lst, start, end):
  return lst[:start] + lst[end+1:]
print(remove_middle([4, 8, 15, 16, 23, 42], 1, 3))

#more_than_n(lst, item, n)
#The function should return True if item appears in the list more than n times. The function should return False otherwise.
def more_than_n(lst, item, n):
  if lst.count(item) > n:
    return True
  else:
    return False
print(more_than_n([2, 4, 6, 2, 3, 2, 1, 2], 2, 3))

#More Frequent Item
#Create a function named more_frequent_item that has three parameters named lst, item1, and item2. 
#Return either item1 or item2 depending on which item appears more often in lst. 
#If the two items appear the same number of times, return item1
def more_frequent_item(lst,item1,item2):
  if lst.count(item1) >= lst.count(item2):
    return item1
  else:
    return item2
 print(more_frequent_item([2, 3, 3, 2, 3, 2, 3, 2, 3], 2, 3))
