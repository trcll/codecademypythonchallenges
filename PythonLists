#Double Index
#The function should double the value of the element at index of lst and return the new list with the doubled value.
#If index is not a valid index, the function should return the original list.
def double_index(lst, index):
  if index < len(lst):
  	lst[index] = lst[index] * 2
  return lst
print(double_index([3, 8, -10, 12], 2))

#Remove Middle
#The function should return a list where all elements in lst with an index between start and end (inclusive) have been removed.
def remove_middle(lst, start, end):
  return lst[:start] + lst[end+1:]
print(remove_middle([4, 8, 15, 16, 23, 42], 1, 3))

#more_than_n(lst, item, n)
#The function should return True if item appears in the list more than n times. The function should return False otherwise.
def more_than_n(lst, item, n):
  if lst.count(item) > n:
    return True
  else:
    return False
print(more_than_n([2, 4, 6, 2, 3, 2, 1, 2], 2, 3))

#More Frequent Item
#Create a function named more_frequent_item that has three parameters named lst, item1, and item2. 
#Return either item1 or item2 depending on which item appears more often in lst. 
#If the two items appear the same number of times, return item1
def more_frequent_item(lst,item1,item2):
  if lst.count(item1) >= lst.count(item2):
    return item1
  else:
    return item2
 print(more_frequent_item([2, 3, 3, 2, 3, 2, 3, 2, 3], 2, 3))

#Append Sum
#The function should add the last two elements of lst together and 
#append the result to lst. It should do this process three times and then return lst.
#adding [-1] last on the list and [-2] 2nd to the last
def append_sum(lst):
  lst.append(lst[-1] + lst[-2])
  lst.append(lst[-1] + lst[-2])
  lst.append(lst[-1] + lst[-2])
  return lst

#larger list
#The function should return the last element of the list that contains more elements. 
#If both lists are the same size, then return the last element of lst1.
def larger_list(lst1, lst2):
  if len(lst1) >= len(lst2):
    return lst1[-1]
  else:
    return lst2[-1]
 print(larger_list([4, 10, 2, 5], [-10, 2, 5, 10]))
 
 #CombineSort
 #The function should combine these two lists into one new list and sort the result. Return the new sorted list.
 def combine_sort(lst1, lst2):
  unsorted = lst1 + lst2
  sortedList = sorted(unsorted)
  return sortedList
print(combine_sort([4, 10, 2, 5], [-10, 2, 5, 10]))

#Append Size
#The function should append the size of lst (inclusive) to the end of lst. The function should then return this new list.
#For example, if lst was [23, 42, 108], the function should return [23, 42, 108, 3] because the size of lst was originally 3.
def append_size(lst):
  lst.append(len(lst))
  return lst
print(append_size([23, 42, 108]))

#Every Three Nums
#The function should return a list of every third number between start and 100 (inclusive). 
#For example, every_three_nums(91) should return the list [91, 94, 97, 100]. 
#If start is greater than 100, the function should return an empty list.
def every_three_nums(start):
  return list(range(start, 101, 3))
