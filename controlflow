#In Range
#The function should return True if num is greater than or equal to lower and less than or 
#equal to upper. Otherwise, return False.
def in_range(num, lower, upper):
  if(num >= lower and num <= upper):
    return True
  return False
print(in_range(10, 10, 10))

#Movie_Review
#If rating is less than or equal to 5, return "Avoid at all costs!". 
#If rating is between 5 and 9, return "This one was fun.". If rating is 9 or above, return "Outstanding!"
def movie_review(rating):
  if(rating <= 5):
    return "Avoid at all costs!"
  if(rating < 9):
    return "This one was fun."
  return "Outstanding!"
print(movie_review(9))

#Twice as large
#Create a function named twice_as_large() that has two parameters named num1 and num2. 
#Return True if num1 is more than double num2. Return False otherwise.
def twice_as_large(num1, num2):
  if num1 > 2 * num2:
    return True
  else:
    return False
    
print(twice_as_large(10, 5))

#Power
#Create a function named large_power() that takes two parameters named base and exponent. 
#If base raised to the exponent is greater than 5000, return True, otherwise return False
def large_power(base, exponent):
  if base ** exponent > 5000:
    return True
  else:
    return False
    
#Divisible By Ten
#Create a function called divisible_by_ten() that has one parameter named num. 
#The function should return True if num is divisible by 10, and False otherwise. 
#Consider how to use modulo (%) to check for divisibility.
  if (num % 10 == 0):
    return True
  else:
    return False
#Max number
#Create a function called max_num() that has three parameters named num1, num2, and num3
#The function should return the largest of these three numbers. If any of two numbers tie as the largest, 
#you should return "It's a tie!".
def max_num(num1, num2, num3):
  if num1 > num2 and num1 > num3:
    return num1
  elif num2 > num1 and num2 > num3:
    return num2
  elif num3 > num1 and num3 > num2:
    return num3
  else:
    return "It's a tie!"
    
#Overbudget
def over_budget(budget, food_bill, electricity_bill, internet_bill,rent):
  if budget < food_bill + electricity_bill + internet_bill + rent:
    return True
  else:
    return False
